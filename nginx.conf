events {
    worker_connections 1024;
}

http {
    # Enhanced log format with more details
    log_format debug_main '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for" '
                         'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                         'host="$host" server_name="$server_name" '
                         'ssl_protocol="$ssl_protocol" ssl_cipher="$ssl_cipher"';

    # SSL detailed log format
    log_format ssl_debug '$remote_addr - $remote_user [$time_local] '
                        'ssl_protocol="$ssl_protocol" ssl_cipher="$ssl_cipher" '
                        'ssl_client_verify="$ssl_client_verify" '
                        'ssl_client_s_dn="$ssl_client_s_dn" '
                        'ssl_client_i_dn="$ssl_client_i_dn" '
                        'ssl_server_name="$ssl_server_name" '
                        'host="$host" server_name="$server_name" '
                        'request="$request" status=$status';

    # Access and error logs with enhanced format
    access_log /var/log/nginx/access.log debug_main buffer=512k flush=1m;
    access_log /dev/stdout debug_main;
    error_log /var/log/nginx/error.log info;
    error_log /dev/stderr info;
    
    # Detailed SSL logging
    error_log /var/log/nginx/ssl_debug.log debug;

    upstream tee_ts_backend {
        server tee-ts:3000;
    }

    # Main HTTPS server - accepts any hostname (wildcard for maximum compatibility)
    server {
        listen 443 ssl default_server;
        server_name _;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Enhanced SSL logging
        access_log /var/log/nginx/ssl_access.log ssl_debug;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Debug-Server-Name "$server_name" always;
        add_header X-Debug-Host "$host" always;

        # Health check endpoint (accessible via HTTPS)
        location /health {
            access_log /var/log/nginx/health.log debug_main;
            proxy_pass http://tee_ts_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Debug endpoint to show request details
        location /debug {
            return 200 "Debug Info:\nHost: $host\nServer Name: $server_name\nRemote Addr: $remote_addr\nSSL Protocol: $ssl_protocol\nSSL Cipher: $ssl_cipher\nUser Agent: $http_user_agent\n";
            add_header Content-Type text/plain;
        }

        # Main application
        location / {
            proxy_pass http://tee_ts_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP server - redirects to HTTPS and provides health check
    server {
        listen 80 default_server;
        server_name _;
        
        # Health check endpoint (accessible via HTTP)
        location /health {
            access_log /var/log/nginx/health_http.log debug_main;
            proxy_pass http://tee_ts_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Debug endpoint for HTTP
        location /debug {
            return 200 "HTTP Debug Info:\nHost: $host\nServer Name: $server_name\nRemote Addr: $remote_addr\nUser Agent: $http_user_agent\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
} 